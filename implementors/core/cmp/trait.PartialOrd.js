(function() {var implementors = {};
implementors["async_std"] = [{"text":"impl&lt;'a&gt; PartialOrd&lt;Components&lt;'a&gt;&gt; for Components&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;Path&gt; for Path","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;Path&gt; for PathBuf","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;PathBuf&gt; for Path","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;&amp;'a Path&gt; for PathBuf","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;PathBuf&gt; for &amp;'a Path","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;Path&gt; for Cow&lt;'a, Path&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;Cow&lt;'a, Path&gt;&gt; for Path","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;&amp;'b Path&gt; for Cow&lt;'a, Path&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;Cow&lt;'a, Path&gt;&gt; for &amp;'b Path","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;PathBuf&gt; for Cow&lt;'a, Path&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;Cow&lt;'a, Path&gt;&gt; for PathBuf","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;OsStr&gt; for PathBuf","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;PathBuf&gt; for OsStr","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;&amp;'a OsStr&gt; for PathBuf","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;PathBuf&gt; for &amp;'a OsStr","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;Cow&lt;'a, OsStr&gt;&gt; for PathBuf","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;PathBuf&gt; for Cow&lt;'a, OsStr&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;OsString&gt; for PathBuf","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;PathBuf&gt; for OsString","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;OsStr&gt; for Path","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;Path&gt; for OsStr","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;&amp;'a OsStr&gt; for Path","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;Path&gt; for &amp;'a OsStr","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;Cow&lt;'a, OsStr&gt;&gt; for Path","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;Path&gt; for Cow&lt;'a, OsStr&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;OsString&gt; for Path","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;Path&gt; for OsString","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;OsStr&gt; for &amp;'a Path","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;&amp;'a Path&gt; for OsStr","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;Cow&lt;'b, OsStr&gt;&gt; for &amp;'a Path","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;&amp;'a Path&gt; for Cow&lt;'b, OsStr&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;OsString&gt; for &amp;'a Path","synthetic":false,"types":[]},{"text":"impl&lt;'a, 'b&gt; PartialOrd&lt;&amp;'a Path&gt; for OsString","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;PathBuf&gt; for PathBuf","synthetic":false,"types":[]}];
implementors["futures_lite"] = [{"text":"impl&lt;T:&nbsp;PartialOrd&gt; PartialOrd&lt;AssertAsync&lt;T&gt;&gt; for AssertAsync&lt;T&gt;","synthetic":false,"types":[]}];
implementors["futures_util"] = [{"text":"impl&lt;T:&nbsp;PartialOrd&gt; PartialOrd&lt;AllowStdIo&lt;T&gt;&gt; for AllowStdIo&lt;T&gt;","synthetic":false,"types":[]}];
implementors["log"] = [{"text":"impl&lt;'k, 'ko&gt; PartialOrd&lt;Key&lt;'ko&gt;&gt; for Key&lt;'k&gt;","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;Level&gt; for Level","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;LevelFilter&gt; for Level","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;LevelFilter&gt; for LevelFilter","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;Level&gt; for LevelFilter","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; PartialOrd&lt;Metadata&lt;'a&gt;&gt; for Metadata&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; PartialOrd&lt;MetadataBuilder&lt;'a&gt;&gt; for MetadataBuilder&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl PartialOrd&lt;Ident&gt; for Ident","synthetic":false,"types":[]}];
implementors["regex_syntax"] = [{"text":"impl PartialOrd&lt;Span&gt; for Span","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;Position&gt; for Position","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;Literal&gt; for Literal","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;ClassUnicodeRange&gt; for ClassUnicodeRange","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;ClassBytesRange&gt; for ClassBytesRange","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;Utf8Sequence&gt; for Utf8Sequence","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;Utf8Range&gt; for Utf8Range","synthetic":false,"types":[]}];
implementors["syn"] = [{"text":"impl PartialOrd&lt;Lifetime&gt; for Lifetime","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()